name: CI - Lint, Test, and Bump Version

on:
  push:
    branches: 
      - main
      - api-version
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0   # Needed so bump2version can create tags

    # 2. Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # 3. Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || echo "No requirements"
        pip install setuptools wheel twine pytest flake8 bump2version httpx
        pip install -e .   # Install your package for tests

    # 4. Lint code
    - name: Lint code
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    # 5. Run tests
    - name: Run tests
      run: pytest

    # 6. Configure git
    - name: Configure git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    # 7. Determine version bump based on last commit message
    - name: Determine version bump
      id: bump
      run: |
        LAST_COMMIT=$(git log -1 --pretty=%B)
        echo "Last commit message: $LAST_COMMIT"

        if echo "$LAST_COMMIT" | grep -q "BREAKING CHANGE"; then
          echo "type=major" >> $GITHUB_OUTPUT
        elif echo "$LAST_COMMIT" | grep -q "^feat"; then
          echo "type=minor" >> $GITHUB_OUTPUT
        else
          echo "type=patch" >> $GITHUB_OUTPUT
        fi
      shell: bash

    # 8. Bump version
    - name: Bump version
      run: |
        bump2version ${{ steps.bump.outputs.type }} --allow-dirty

    # 9. Push version bump and tags back to repo
    - name: Push version bump back to repository
      run: |
        git push origin HEAD:main --tags
