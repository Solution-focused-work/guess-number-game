Metadata-Version: 2.4
Name: guess-it-right
Version: 0.1.0
Summary: A simple number guessing game with difficulty levels
Home-page: https://github.com/your-username/your-repo-name
Author: Janki Dhanani
Author-email: jnkdhanani@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-python
Dynamic: summary

# 🎯 Number Guessing Game

A simple **Python-based CLI game** where the computer randomly selects a number, and the player tries to guess it within limited attempts.  
Difficulty levels (easy, medium, hard) change the range of numbers. The game also logs results to a CSV file.

---

## 🚀 Features
- Choose difficulty:
  - Easy → number between 1–20
  - Medium → number between 1–50
  - Hard → number between 1–100
- Limited attempts (default: 10).
- Validates user input.
- Keeps track of wins/losses.
- Logs results to `game_log.csv`.


# Project Setup and Usage Guide

This guide walks you through setting up your development environment, installing dependencies, and running tests.

---

## 1. Create a virtual environment

Run this command in your project directory to create an isolated Python environment:

python3 -m venv env

## 2. Activate the virtual environment
Activate the environment so your shell uses the isolated Python and packages:

On macOS/Linux: 
source env/bin/activate

On Windows (Command Prompt): 
env\Scripts\activate

## 3. Upgrade pip (recommended)
Make sure you have the latest pip version inside the environment:

pip install --upgrade pip

## 4. Install project dependencies
If you already have a requirements.txt file, install all required packages:

pip install -r requirements.txt

If you don’t have one yet, install your needed packages manually, for example:

pip install pytest sphinx twine

and then create the requirements.txt file by running:

pip freeze > requirements.txt

## 5. Run tests or your project
To run tests with pytest:

pytest
Or run whatever commands your project uses.

## 6. Deactivate the virtual environment
When you’re done working, exit the virtual environment:

deactivate

## Notes
Always activate your virtual environment before running your project or installing packages.

Keep your requirements.txt updated whenever you add or upgrade packages.

Use version control (like Git) to track changes in your project and dependencies.

---

## 🖥️ How to Run

1. Clone this repository:
   ```bash
   git clone https://github.com/your-username/number-guessing-game.git
   cd number-guessing-game

---

## 🎮 Example Gameplay

Enter your name: Alice
Choose difficulty (easy / medium / hard): easy
🎯 Welcome to Number Guessing Game, Alice!
You have only 10 attempts to guess the number between 1 and 20.

Enter your guess 1-20: 10
Too low!
Attempts left: 9

Enter your guess 1-20: 15
Too high!
Attempts left: 8

Enter your guess 1-20: 13
🎉 You guessed it in 3 attempts.

✅ Logged: Alice, easy, 3, 13, Win

